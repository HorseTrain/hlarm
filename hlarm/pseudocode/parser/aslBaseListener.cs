//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from asl.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IaslListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class aslBaseListener : IaslListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.constantTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantTest([NotNull] aslParser.ConstantTestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.constantTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantTest([NotNull] aslParser.ConstantTestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.expressionTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionTest([NotNull] aslParser.ExpressionTestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.expressionTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionTest([NotNull] aslParser.ExpressionTestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.lineTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineTest([NotNull] aslParser.LineTestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.lineTest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineTest([NotNull] aslParser.LineTestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFile([NotNull] aslParser.SourceFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFile([NotNull] aslParser.SourceFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.lValueSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLValueSet([NotNull] aslParser.LValueSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.lValueSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLValueSet([NotNull] aslParser.LValueSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] aslParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] aslParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] aslParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] aslParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.assertStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssertStatement([NotNull] aslParser.AssertStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.assertStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssertStatement([NotNull] aslParser.AssertStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.controlFlowStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterControlFlowStatements([NotNull] aslParser.ControlFlowStatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.controlFlowStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitControlFlowStatements([NotNull] aslParser.ControlFlowStatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.hardStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHardStatements([NotNull] aslParser.HardStatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.hardStatements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHardStatements([NotNull] aslParser.HardStatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.enumerationDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationDeclaration([NotNull] aslParser.EnumerationDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.enumerationDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationDeclaration([NotNull] aslParser.EnumerationDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.typeMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeMember([NotNull] aslParser.TypeMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.typeMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeMember([NotNull] aslParser.TypeMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.typeArrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeArrayDeclaration([NotNull] aslParser.TypeArrayDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.typeArrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeArrayDeclaration([NotNull] aslParser.TypeArrayDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] aslParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] aslParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.emptyTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyTypeDeclaration([NotNull] aslParser.EmptyTypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.emptyTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyTypeDeclaration([NotNull] aslParser.EmptyTypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.newTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewTypeDeclaration([NotNull] aslParser.NewTypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.newTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewTypeDeclaration([NotNull] aslParser.NewTypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.oldTypeRedeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOldTypeRedeclaration([NotNull] aslParser.OldTypeRedeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.oldTypeRedeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOldTypeRedeclaration([NotNull] aslParser.OldTypeRedeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoop([NotNull] aslParser.ForLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoop([NotNull] aslParser.ForLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] aslParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] aslParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.whenStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhenStatement([NotNull] aslParser.WhenStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.whenStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhenStatement([NotNull] aslParser.WhenStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] aslParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] aslParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseStatement([NotNull] aslParser.ElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseStatement([NotNull] aslParser.ElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatement([NotNull] aslParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatement([NotNull] aslParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] aslParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] aslParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] aslParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] aslParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.explicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitFunctionDeclaration([NotNull] aslParser.ExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.explicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitFunctionDeclaration([NotNull] aslParser.ExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.setExplicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetExplicitFunctionDeclaration([NotNull] aslParser.SetExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.setExplicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetExplicitFunctionDeclaration([NotNull] aslParser.SetExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.normalExplicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNormalExplicitFunctionDeclaration([NotNull] aslParser.NormalExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.normalExplicitFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNormalExplicitFunctionDeclaration([NotNull] aslParser.NormalExplicitFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.arrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayDeclaration([NotNull] aslParser.ArrayDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.arrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayDeclaration([NotNull] aslParser.ArrayDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.commaSeperatedExpressionSingleton"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommaSeperatedExpressionSingleton([NotNull] aslParser.CommaSeperatedExpressionSingletonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.commaSeperatedExpressionSingleton"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommaSeperatedExpressionSingleton([NotNull] aslParser.CommaSeperatedExpressionSingletonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.commaSeperatedExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommaSeperatedExpressions([NotNull] aslParser.CommaSeperatedExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.commaSeperatedExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommaSeperatedExpressions([NotNull] aslParser.CommaSeperatedExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArguments([NotNull] aslParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArguments([NotNull] aslParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.parentheses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParentheses([NotNull] aslParser.ParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.parentheses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParentheses([NotNull] aslParser.ParenthesesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.edgeCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEdgeCases([NotNull] aslParser.EdgeCasesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.edgeCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEdgeCases([NotNull] aslParser.EdgeCasesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bitAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitAccessor([NotNull] aslParser.BitAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bitAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitAccessor([NotNull] aslParser.BitAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bitFeild"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitFeild([NotNull] aslParser.BitFeildContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bitFeild"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitFeild([NotNull] aslParser.BitFeildContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.structAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructAccessor([NotNull] aslParser.StructAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.structAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructAccessor([NotNull] aslParser.StructAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.partAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartAccessor([NotNull] aslParser.PartAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.partAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartAccessor([NotNull] aslParser.PartAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.baseExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseExpression([NotNull] aslParser.BaseExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.baseExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseExpression([NotNull] aslParser.BaseExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.numberRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberRange([NotNull] aslParser.NumberRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.numberRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberRange([NotNull] aslParser.NumberRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.functionScriptOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionScriptOperations([NotNull] aslParser.FunctionScriptOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.functionScriptOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionScriptOperations([NotNull] aslParser.FunctionScriptOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.unaryOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperations([NotNull] aslParser.UnaryOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.unaryOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperations([NotNull] aslParser.UnaryOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.exponentialOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExponentialOperations([NotNull] aslParser.ExponentialOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.exponentialOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExponentialOperations([NotNull] aslParser.ExponentialOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.multiplicationOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationOperations([NotNull] aslParser.MultiplicationOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.multiplicationOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationOperations([NotNull] aslParser.MultiplicationOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.additionOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionOperations([NotNull] aslParser.AdditionOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.additionOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionOperations([NotNull] aslParser.AdditionOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.concatOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatOperations([NotNull] aslParser.ConcatOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.concatOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatOperations([NotNull] aslParser.ConcatOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.shiftingOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftingOperations([NotNull] aslParser.ShiftingOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.shiftingOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftingOperations([NotNull] aslParser.ShiftingOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.comparisonOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperations([NotNull] aslParser.ComparisonOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.comparisonOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperations([NotNull] aslParser.ComparisonOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.equalityOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityOperations([NotNull] aslParser.EqualityOperationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.equalityOperations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityOperations([NotNull] aslParser.EqualityOperationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bitwiseAndOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseAndOperation([NotNull] aslParser.BitwiseAndOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bitwiseAndOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseAndOperation([NotNull] aslParser.BitwiseAndOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bitwiseExclusiveOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseExclusiveOrOperation([NotNull] aslParser.BitwiseExclusiveOrOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bitwiseExclusiveOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseExclusiveOrOperation([NotNull] aslParser.BitwiseExclusiveOrOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bitwiseOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOrOperation([NotNull] aslParser.BitwiseOrOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bitwiseOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOrOperation([NotNull] aslParser.BitwiseOrOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.logicalAndOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndOperation([NotNull] aslParser.LogicalAndOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.logicalAndOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndOperation([NotNull] aslParser.LogicalAndOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.logicalOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrOperation([NotNull] aslParser.LogicalOrOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.logicalOrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrOperation([NotNull] aslParser.LogicalOrOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.smallTernaryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSmallTernaryOperation([NotNull] aslParser.SmallTernaryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.smallTernaryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSmallTernaryOperation([NotNull] aslParser.SmallTernaryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.bigTernaryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBigTernaryOperation([NotNull] aslParser.BigTernaryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.bigTernaryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBigTernaryOperation([NotNull] aslParser.BigTernaryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.teranryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTeranryOperation([NotNull] aslParser.TeranryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.teranryOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTeranryOperation([NotNull] aslParser.TeranryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] aslParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] aslParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.tupleSingle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleSingle([NotNull] aslParser.TupleSingleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.tupleSingle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleSingle([NotNull] aslParser.TupleSingleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTuple([NotNull] aslParser.TupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTuple([NotNull] aslParser.TupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection([NotNull] aslParser.CollectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection([NotNull] aslParser.CollectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] aslParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] aslParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] aslParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] aslParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.tupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleType([NotNull] aslParser.TupleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.tupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleType([NotNull] aslParser.TupleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.constantType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantType([NotNull] aslParser.ConstantTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.constantType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantType([NotNull] aslParser.ConstantTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.concreteTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcreteTypes([NotNull] aslParser.ConcreteTypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.concreteTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcreteTypes([NotNull] aslParser.ConcreteTypesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.dynamicTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDynamicTypes([NotNull] aslParser.DynamicTypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.dynamicTypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDynamicTypes([NotNull] aslParser.DynamicTypesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aslParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] aslParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aslParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] aslParser.ConstantContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
